{"version":3,"sources":["Components/weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["Weather","useState","city","setCity","search","setSearch","useEffect","a","url","fetch","response","json","resp","fetchApi","className","type","value","name","id","onChange","event","target","current","src","condition","icon","alt","temp_c","humidity","wind_kph","vis_km","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA2EeA,EAxEC,WAAO,IAAD,EACIC,mBAAS,MADb,mBACbC,EADa,KACPC,EADO,OAEQF,mBAAS,aAFjB,mBAEbG,EAFa,KAELC,EAFK,KAkBpB,OAdAC,qBAAU,YACM,uCAAG,gCAAAC,EAAA,6DAITC,EAJS,2FAIiFJ,EAJjF,oBAKQK,MAAMD,GALd,cAKTE,EALS,gBAMIA,EAASC,OANb,OAMTC,EANS,OAOfT,EAAQS,GAPO,2CAAH,qDAUdC,KACC,CAACT,IAGF,qCACE,sBAAKU,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,uBACEC,KAAK,SACLC,MAAOZ,EACPa,KAAK,YACLC,GAAG,YACHC,SAAU,SAACC,GACTf,EAAUe,EAAMC,OAAOL,YAI3Bd,GAASA,EAAKoB,QAGd,sBAAKR,UAAU,UAAf,UACE,sBAAKA,UAAU,WAAf,UAEE,qBACEA,UAAU,OACVS,IAAKrB,EAAKoB,QAAQE,UAAUC,KAC5BC,IAAI,SAGN,qBAAKZ,UAAU,eAAf,SAA+BV,OAEjC,qBAAKU,UAAU,QAAf,SAEE,+BACGZ,EAAKoB,QAAQK,OACd,sDAGJ,4CAAezB,EAAKoB,QAAQM,YAC5B,+CAAkB1B,EAAKoB,QAAQO,SAA/B,WACA,+CAAkB3B,EAAKoB,QAAQQ,OAA/B,YAtBF,iDA2BJ,sBAAKhB,UAAU,KAAf,UACE,mBACEiB,KAAK,wDADP,SAIE,mBAAGjB,UAAU,iBAAb,iBAEF,uDC1DOkB,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACC,cAAC,EAAD,OCKUmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0411d7c6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./weather.css\";\n\nconst Weather = () => {\n  const [city, setCity] = useState(null);\n  const [search, setSearch] = useState(\"New Delhi\");\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      //   const key=\"f5b2b9b74cdd5bbc3e0af8f298428bae\";\n      // const url=`https://api.openweathermap.org/data/2.5/weather?q=${search}&APPID=f5b2b9b74cdd5bbc3e0af8f298428bae`\n\n      const url = `https://api.weatherapi.com/v1/current.json?key= 0454e4265d9c45db93923934213003&q=${search}&aqi=no`;\n      const response = await fetch(url);\n      const resp = await response.json();\n      setCity(resp);\n    };\n\n    fetchApi();\n  }, [search]);\n\n  return (\n    <>\n      <div className=\"box\">\n        <div className=\"inp\">\n          <input\n            type=\"search\"\n            value={search}\n            name=\"searchBox\"\n            id=\"searchBox\"\n            onChange={(event) => {\n              setSearch(event.target.value);\n            }}\n          />\n        </div>\n        {!city || !city.current ? (\n          <p>No Data Found</p>\n        ) : (\n          <div className=\"content\">\n            <div className=\"location\">\n              {/* <i className=\"fa fa-3x fa-street-view\" aria-hidden=\"true\"></i> */}\n              <img\n                className=\"icon\"\n                src={city.current.condition.icon}\n                alt=\"imge\"\n              ></img>\n\n              <div className=\"locationName\">{search}</div>\n            </div>\n            <div className=\"tempe\">\n              {/* {city.current.condition.text} */}\n              <h3>\n                {city.current.temp_c}\n                <small>Â° Celsius</small>\n              </h3>\n            </div>\n            <h4>Humidity: {city.current.humidity}</h4>\n            <h4> Wind Speed: {city.current.wind_kph} km/h</h4>\n            <h4> Visibility: {city.current.vis_km} km</h4>\n          </div>\n        )}\n      </div>\n\n      <div className=\"me\">\n        <a\n          href=\"https://www.linkedin.com/in/nidhi-gahlawat-01947818a/\"\n          \n        >\n          <i className=\"fa fa-linkedin\"> </i>\n        </a>\n        <h2>Nidhi Gahlawat</h2>\n      </div>\n    </>\n  );\n};\nexport default Weather;\n","\nimport './App.css';\nimport Weather from './Components/weather'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Weather></Weather>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}